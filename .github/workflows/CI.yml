name: CI

on: [ push, pull_request ]

jobs:
  build-wasm:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - container: 'emscripten/emsdk:3.1.61'
            artifactName: 'emscripten-3.1.61'   
            buildFlags: ''      
          - container: 'emscripten/emsdk:3.1.61'
            artifactName: 'emscripten-3.1.61-shared'   
            buildFlags: '--shared'
          - container: 'emscripten/emsdk:3.1.61'
            artifactName: 'emscripten-3.1.61-side-module'   
            buildFlags: '--side-module'
          - container: 'emscripten/emsdk:3.1.61'
            artifactName: 'emscripten-3.1.61-simd'   
            buildFlags: '--simd'
          - container: 'emscripten/emsdk:3.1.61'
            artifactName: 'emscripten-3.1.61-simd-threads'   
            buildFlags: '--simd --threads'
    container: 
      image: ${{ matrix.config.container }}

    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v2

      - name: aquire missing tools
        run: |
          sudo apt update -y
          sudo apt install -y autotools-dev autoconf automake libtool pkg-config

      - name: add execute permission
        run: |
          chmod +x /emsdk/emsdk_env.sh
          chmod +x emlib.sh
          chmod -R +x scripts

      - name: build webp
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} webp || true

      - name: build turbojpeg
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} turbojpeg || true

      - name: build giflib
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} giflib || true

      - name: build libtiff
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} libtiff || true

      - name: build ogg
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} ogg || true

      - name: build opus
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} opus || true

      - name: build opusfile
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} opusfile || true

      - name: build opencv
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} opencv || true

      - name: build libmpg123
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} libmpg123 || true

      - name: build zlib
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} zlib || true

      - name: build libpng
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} libpng || true

      - name: build freetype
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} freetype || true

      - name: build harfbuzz
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} harfbuzz || true

      - name: build freetype
        run: |
          ./emlib.sh rebuild ${{ matrix.config.buildFlags }} --flags "-DFT_WITH_HARFBUZZ=On" freetype || true

      - name: build soundtouch
        run: |
          ./emlib.sh build ${{ matrix.config.buildFlags }} soundtouch || true

      - name: save files
        uses: actions/upload-artifact@v2
        with:
          name: emlib-artifacts-${{ matrix.config.artifactName }}
          path: |
            include/**/*
            lib/**/*
            share/**/*
            bin/**/*
